/* index.css */
/* @들어가는 건 at rules*/
/* import 통해 하나로 merge */
@import url("./normalize.css");
@import url("./base.css");
@import url("./theme.css");
/* @import url("./style.css"); */

/* *를 통해 리셋하는 건 좋지 못함 */
*{
    margin: 0;
    padding: 0;
    border: 0;
}

/* 컨테이너 마크업 */
.container {
    min-width: 16.25rem;
    /* min-width: 260/16;. 더 줄어드는 걸 막음 */

}

/* 이걸 sr-only로 빼서 클래스로 주는게 좋음 */
/* legend */
/* 숨김 컨텐츠 */
.sr-only{
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
    /* 아래처럼 하게되면 이슈발생 */
    /* top: 9999px;
    left: -11111px; */
}

/* 웹카페 반응형 스타일 */
/* 공통 스타일 */
body {
    font-size: var(--text-sm);
  }
  
  /* 공통 아이콘 */
  .far {
    margin-right: var(--spacing-xs);
  }
  
  /* 공통 헤더 */
  .appHeader {
    position: relative;
    padding: var(--spacing-base) var(--spacing-lg);
  }
  
  /* 공통 로고 */
  .logo {
    width: 12.75rem; /* 204px */
    height: 3.75rem; /* 60px */
  }
  
  .logo__link {
    display: block;
    width: 100%;
    height: 100%;
    background: url(./../images/webcafe-logo.png) no-repeat 0 0 / 100%;
  }
  
  /* 공통 멤버서비스 */
  .memberOnly {
    padding-left: 0;
    list-style: none;
    display: flex;
    flex-flow: row nowrap;
    justify-content: flex-end;
  }
  
  /* 공통 검색 폼 */
  
  input[type="search"] {
    -webkit-appearance: none;
    appearance: none;
  }
  
  fieldset {
    border: 0;
    margin: 0;
    padding: 0;
  }
  
  .button--none {
    border: 0;
    padding: 0;
    background: transparent;
  }
  
  .button {
    cursor: pointer;
    border: 0;
    border-radius: 0.25rem;
    height: 2rem;
    padding: 0.125rem 0.75rem;
    background: transparent;
  }
  
  .button--fillSecondary {
    color: var(--white);
    background: var(--secondary-color);
  }
  
  .button--outlineSecondary {
    color: var(--secondary-color);
    border: 1px solid currentColor;
  }
  
  .formInput__input {
    border: 1px solid var(--border-color);
    border-radius: 0.25rem;
    height: 2rem;
    padding: 0.125rem 0.75rem;
    width: 100%;
  }
  
  .searchForm__group {
    display: flex;
    flex-flow: row nowrap;
    gap: var(--spacing-xs);
  }

  /* 공통 메인 메뉴 */
  /* 중단점이 많다면 유지보수가 어려움, 공통을 작업한다면 모바일도 데스크탑에도 영향, 따라서 데스크탑모드에서 하나씩 없애나가는 형식 */
  .menu__list{
    background: #ff0;
    padding:var(--spacing-lg);
  }

  .menu__item{
    border-bottom: 1px solid #121212;
  }

  .menu__link{
    /* link는 a태그이고 이건 인라인 요소, 따라서 padding을 주려면 블록의 성격을 가져야 함
    bfc(block format context) 이런 식으로 블록형으로 바꿔줘야 함 */
    display: block;
    padding: var(--spacing-xs) 0;
    font-size: 1.15rem;
    font-weight: 500;
  }

  /* 모바일 디바이스 */
  /* 여기서 320보다 작게되면 스타일이 안먹힘, 따라서 공통을 먼저 정의 후 모바일(small) 재정의 태블릿(medium) -> 데스크탑(large) 이런 식으로 올라가야 함 */
@media (min-width: 320px) and (max-width: 767px) {
    /* 모바일 헤더 */
    .appHeader {
      background: var(--primary-color);
      display: flex;
      flex-flow: column nowrap;
      gap: var(--spacing-sm);
    }
  
    /* 모바일 멤버서비스 */
    .memberOnly {
      color: var(--white);
      order: -1;
    }
    /* 모바일 검색폼 */
    .searchForm__group .formInput {
      flex-grow: 1;
    }

    /* 모바일 메인 메뉴 제어 버튼 */
  .buttonWrapper {
    position: absolute;
    right: var(--spacing-md);
    top: 3.5rem;
    overflow: hidden;
    padding: 0.25rem;
  }

  .button--burger {
    position: relative;
    display: block;
    width: 1.875rem;
    height: 1.875rem;
  }

  .button--burger:focus {
    outline-offset: 2px;
  }

  /* 모바일 디바이스일 때 햄버거 모양 만드는거
  absolute를 줬기 떄문에 부모에 rel주고. 부모 기준으로 각각을 top배치. bottom을 top100%배치를 했는데, 부모의 100%위치에 위치시킨다는거, 그렇게 되면 버튼밖으로 버거의 bottom이 나가게 되는데, 그걸 Y축 방향으로 -100% transform하겠다는 건 걔 크기만큼 끌어올리겠다는거
   */
  .button--burgerBarTop,
  .button--burgerBarMiddle,
  .button--burgerBarBottom {
    position: absolute;
    left: 0;
    width: 100%;
    height: 20%;
    background: var(--white);
    border-radius: 1.5rem;
    transition: all 400ms; /*부드럽게 처리*/
  }

  .button--burgerBarTop {
    top: 0;
  }

  .button--burgerBarMiddle {
    top: 50%;
    transform: translateY(-50%);
  }

  .button--burgerBarBottom {
    top: 100%;
    transform: translateY(-100%);
  }

  .button--burger.is--active .button--burgerBarTop {
    top: 50%;
    transform: translateY(-50%) rotate(45deg);
    /* 3줄이 있었는데 X로 만들기 위해서 돌림, 중간으로 돌려놓고 그다음 X를 만드느라 top:50%이 먼저나옴 */
  }

  .button--burger.is--active .button--burgerBarMiddle {
    transform: translate(-120%, -50%);
  }

  .button--burger.is--active .button--burgerBarBottom {
    top: 50%;
    transform: translateY(-50%) rotate(-45deg);
  }

  /* 모바일 메인 메뉴 */
  .menu__list{
    background-color: var(--accent-opacity-color);
    width: 70vw;
    height: 100vh;
    /* body는 높이를 가지지 않으므로 뷰포트기준으로 해야함*/
    position: fixed;
    top: 0;
    /* 어딘가에 배치를 해뒀다가 다시 나타나게 하는건 성능에 좋지 못함. 즉. left:-200px이런거처럼. 움직이고 다시 그리고 하는 걸 반복. 다시 그리지 않기 위해 TRANSFORM */
    left: 0;
    /* 뒤 배경이 흐릿 */
    backdrop-filter: blur(4px);
    transform: translateX(-150%);
    /* 스르륵 나오게 하는 효과 */
    transition: all 400ms;
  }

  /* 한칸 띄워져 있으면 상속 */
  .is--active.menu__list{
    /* 한쪽에 바쪄있던걸 다시 돌리라는거 */
    transform: translateX(0);
  }
}

/* 데스크탑 디바이스 */
@media (min-width: 768px) {
    /* 데스크탑 공통 */
    .appHeader, .menu__list, .appMain, .appFooter{
        max-width: var(--container-width);
                /* 이 조건이 동작한다는 건 지금은 768이상일 때 동작하니 768 ~ 1024가 되는 거 */
        /* width: 1000px; */
        /* auto margin, flex => 반응형 */
        /* 만약 각각 left만 쓴다던지(오른쪽 정렬), right만 쓴다던지(왼쪽 정렬) 하면 정렬이 달라짐, 대신 width값 필요 */
        margin-left: auto;
        margin-right: auto;

    }
    /* 데스크탑 헤더 */
    .appHeader {
      display: grid;
      grid-template-columns: 204px 1fr;
      gap: var(--spacing-base);
      max-width: var(--container-width);
      margin-left: auto;
      margin-right: auto;
    }
    /* 데스크탑 로고 */
    .logo {
      grid-area: 1 / 1 / 3 / 2;
      align-self: center;
    }
  
    /* 데스크탑 검색 폼 */
    .searchForm__group {
      justify-content: flex-end;
    }
    .searchForm__group .formInput {
      width: 25rem;
    }
  
    /* .formInput__input {
      border: 1px solid #aaa;
      border-radius: 4px;
    } */
  
    /* 데스크탑 메인 메뉴 제어 버튼 */
    .buttonWrapper {
      display: none;
    }

    /* 데스크탑 메인 메뉴 */
    /* 내가 작성 */
    /* .menu{
    }
    .menu__list{
        --spacing-xl:60px;
        display: flex;
        justify-content: center;
        align-items: center;
        gap: 55px;
        background-color: #988574;
        width: 100%;
        height: var(--spacing-xl);
    }
    .menu__item{}
    .menu__link{
        font-size: var(--text-base);
        color: #fff;
        text-shadow: 2px -2px #4b4848;
    } */

    /* 제일 바깥이기 때문에 너비가 변경되면 안됨, 여기선 제일 바깥 컨테이너에 배경색만 주고, 그 안에 컨테이너 하나를 더 둬서 가운데 배치시킨거 */
    .menu{
        background-color: var(--secondary-color);
        color: var(--white);
    }
    .menu__list{
      background-color: transparent;
      padding: 0;
      /* 위의 속성은 공통부분 정의 후, 데스크 탑에서도 적용되는 부분을 없애는 거 */
        display: flex;
        flex-flow: row nowrap;
        justify-content: space-between;
        
    }
    .menu__item{
    border-bottom: 0;
      /* 위의 속성은 공통부분 정의 후, 데스크 탑에서도 적용되는 부분을 없애는 거 */

        padding: 0.5rem 0;
    }
    .menu__link{
        /* padding이 먹히게 하기 위해 display: block로 함, 링크 영역에 padding을 주는 이유가 클릭할 영역을 넓히기 위함 */
        /* display: block;
        
        font-size: 1.2rem;
        font-weight: 700; 
        padding: 1rem 0;*/
        /* 위 속성은 공통에서 정의됐으니 지움 */
    }
  }
  